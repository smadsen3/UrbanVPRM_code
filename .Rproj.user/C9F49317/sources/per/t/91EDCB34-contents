## Sabrina Madsen

# This code is for filling in any daytime missing and day-time 0 hourly surface 
# solar irradiance (swRad) data from the processGOES_script4.R using non-linear 
# interpolation. This has to be done for each region separately but idealy
# should only be required once

memory.limit(size=5e8)

## Load libraries
library("data.table")
library("raster")
library("ggplot2") #not needed for running just visualizing
library("dplyr")
library("zoo")

#dir_clima = paste0('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m/2018') # climate data in /urbanVPRM_30m/driver_data/rap_goes/

clima.dt_test = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_excellent_only.rds")
clima.dt = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/pre_processed_GOES/goes_GTA_2019_pre_processed_excellent_only.rds")
clima.dt2 = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_gapfilled.rds")
clima.dt3 = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_gap_and_0_filled.rds")
clima.dt4 = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_gap_and_0_mean_filled.rds")

clima.dt1_copy = clima.dt1
clima.dt1_copy[which((clima.dt1$swRad==0) & ((clima.dt$swRad!=0) | (is.na(clima.dt$swRad))))]<-NA

sw_test <- clima.dt$swrad[clima.dt$Index==1]#105]
HoY_test <- clima.dt$HOY[clima.dt$Index==1]
sw_inter_test <- clima.dt$sw_inter[clima.dt$Index==1]

df <- data.frame(HoY=HoY_test,swRad=sw_test,sw_inter=sw_inter_test)

plot(df$sw_inter[3100:3300], type='o',pch=16)
points(df$swRad[3100:3300], type='o',pch=10,col='red',main='Excellent only')
points(df_ex$swRad[2100:2200], type='o',pch=12,col='blue',main='Excellent only')
#points(df2$swRad[8000:8100], type='o',pch=10,col='red',main='0 to NAs')
points(df3$swRad[8000:8760], type='o',pch=16,col='blue',main='Good only')

plot(df1$swRad[8000:8100], type='o',pch=16)
points(df$swRad[8000:8100], type='o',pch=10,col='red',main='Excellent only')


plot(df$swRad[8000:8760], type='o',pch=16)
#points(df2$swRad[8000:8100], type='o',pch=10,col='red',main='0 to NAs')
points(df3$swRad[8000:8760], type='o',pch=16,col='blue',main='Good only')


df3$sw_inter<-na.spline(df3$swRad)

plot(df$sw_inter[8000:8760], col='red', type='o',pch=16)
points(df$swRad[8000:8760],col='black',pch=16)

plot(df3$sw_inter[8000:8760], col='red', type='o',pch=16)
points(df3$swRad[8000:8760],col='black',pch=16)


plot(df$swRad[8000:8100],type='o',pch=16)
points(df3$sw_inter[8000:8100],type='o',pch=10,col='blue')

df$sw_inter[df$sw_inter<0]=0


#add a new column for the interpolated swRad
#clima.dt$sw_inter<-clima.dt$swRad
clima.dt$sw_inter_mean<-clima.dt$swRad

#clima.dt$tmpC_inter<-clima.dt$tmpC

#Replace any pixels that are exactly zero and the quality flag is <5 with the mean of non-zero pixels in that scene
# If the TOA reflectance is higher than expected, swRad set to 0 (completely cloudy) and quality flag is set to 4
for (i in unique(clima.dt$HoY)){
  if ((is.na(mean(clima.dt$sw_inter_mean[clima.dt$HoY==i],na.rm=TRUE))==FALSE) & (mean(clima.dt$sw_inter_mean[clima.dt$HoY==i],na.rm=TRUE)>0)){
    ind<-which((clima.dt$sw_inter_mean[clima.dt$HoY==i]==0) & ((clima.dt_ex$swRad[clima.dt$HoY==i]!=0) | (is.na(clima.dt_ex$swRad[clima.dt$HoY==i]))))
    if (length(ind)>0){
      #clima.dt$sw_inter[clima.dt$HoY==i][ind]<-clima.dt$sw_inter[clima.dt$HoY==i][ind]*NA
      clima.dt$sw_inter_mean[clima.dt$HoY==i][ind]<-mean((clima.dt$sw_inter_mean[clima.dt$HoY==i])[clima.dt$sw_inter_mean[clima.dt$HoY==i]!=0],na.rm=TRUE)
      print(i)
    }
  }
}

for (i in unique(clima.dt$HoY)){
  if ((is.na(mean(clima.dt$sw_inter_mean[clima.dt$HoY==i],na.rm=TRUE))==FALSE) & (mean(clima.dt$sw_inter_mean[clima.dt$HoY==i],na.rm=TRUE)>0)){
    ind<-which(clima.dt$sw_inter_mean[clima.dt$HoY==i]==0)
    if (length(ind)>0){
      #clima.dt$sw_inter[clima.dt$HoY==i][ind]<-clima.dt$sw_inter[clima.dt$HoY==i][ind]*NA
      clima.dt$sw_inter_mean[clima.dt$HoY==i][ind]<-mean((clima.dt$sw_inter_mean[clima.dt$HoY==i])[clima.dt$sw_inter_mean[clima.dt$HoY==i]!=0],na.rm=TRUE)
      print(i)
    }
  }
}

clima.dt$swRad<-clima.dt$sw_inter_mean

#saveRDS(clima.dt,paste0('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2018/2018/rap_goes_GTA_500m_2018_hourly_0_to_NAs.rds'))


#ind_length<-NULL
for (i in unique(clima.dt$Index)){#[1:length(unique(clima.dt$Index))]){
  ind<-which(clima.dt$Index==i)
  #clima.dt$sw_inter[ind]<-na.spline(clima.dt$sw_inter[ind])
  clima.dt$sw_inter_mean[ind]<-na.spline(clima.dt$sw_inter_mean[ind])
  ##if (i==1){
  ##  ind_length<-sum(is.na(clima.dt$swRad[ind]))
  ##}else{
  ##  ind_length<-append(ind_length,sum(is.na(clima.dt$swRad[ind])))
  ##}
  print(i)
} 


clima.dt$sw_inter_mean[clima.dt$sw_inter_mean<0]=0



#ind_length<-NULL
#for (i in (2135:13824)){
#  if (i==1){
#    ind_length<-length(which(clima.dt$Index==i & is.na(clima.dt$swRad)))
#  }else{
#    ind_length<-append(ind_length,length(which(clima.dt$Index==i & is.na(clima.dt$swRad))))
#  }
##  print(paste(i,":",length(which(clima.dt$Index==i & is.na(clima.dt$swRad)))))
#}
  
#2593, 7788, 8946?
clima.dt$HoY[which(clima.dt$Index==4177 & is.na(clima.dt$swRad))]

sw_test <- clima.dt_test$swRad[clima.dt$Index==225]#1596]
sw_test_fill <- clima.dt$swRad[clima.dt$Index==225]#1596]
tmp_test <- clima.dt$tmpC[clima.dt$Index==225]#1596]
tmp_test_fill <- clima.dt$tmpC_inter[clima.dt$Index==225]#1596]
HoY_test <- clima.dt$HoY[clima.dt$Index==225]#1596]

sw_test <- clima.dt_test$swRad[clima.dt_test$HoY==4122]#7074]#2470]
sw_test_fill <- clima.dt$swRad[clima.dt$HoY==4123]#7074]#2470]
Ind_test <- clima.dt$Index[clima.dt$HoY==4118]#7074]#2470]
x_test <- clima.dt$x[clima.dt$HoY==4120]#7074]#2470]
y_test <- clima.dt$y[clima.dt$HoY==4120]#7074]#2470]

df <- data.frame(x=x_test,y=y_test,swRad=sw_test,sw_inter=sw_test_fill)
#df$swRad[df$swRad==0]<-df$swRad[df$swRad==0]*NA
                          
ggplot(df, aes(x=x,y=y,col=swRad),main='HOY=4122')+geom_point()
ggplot(df, aes(x=x,y=y,col=sw_inter))+geom_point()

Ind_test[which((x_test < -79.49) & (x_test > -79.5) & (y_test<43.7) & (y_test>43.69))]


df <- data.frame(HoY=HoY_test,swRad=sw_test, sw_inter=sw_test_fill)#,tmpC=tmp_test)#, tmp_inter=tmp_test_fill)


plot(df$swRad[1750:1950], type='o',pch=16)

#df$sw_inter<-na.spline(df$swRad)

plot(df$HoY[4115:4125],df$sw_inter[4115:4125],col='red', type='o',pch=16)
points(df$HoY[4100:4150],df$swRad[4100:4150],col='black',pch=16)

plot(df$HoY[500:1000],df$tmpC[500:1000], col='red', type='o',pch=16)
#points(df$HoY[500:1000],df$tmpC[500:1000],col='black',pch=16)


#Replace swRad with interpolated version:
clima.dt$swRad[is.na(clima.dt$swRad)] <- clima.dt$sw_inter_mean[is.na(clima.dt$swRad)]
clima.dt
#Remove sw_inter column
clima.dt<-clima.dt[,-8]


saveRDS(clima.dt,paste0('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_excelent_only_interpolated_fill.rds'))


clima_test.dt<-readRDS(paste0('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2018/2018/rap_goes_GTA_500m_2018_hourly_test.rds'))
clima.dt<-readRDS(paste0('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2018/2018/rap_goes_GTA_500m_2018_hourly_gap_and_0_filled.rds'))
clima_inter<-readRDS('C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2018/2018/rap_goes_GTA_500m_2018_hourly_0_partly_mean_filled.rds')

#sw_test_0_gapfilled <- clima.dt$swRad[clima.dt$HoY==2950]
#sw_test_0_gapfilled_inter <- clima.dt$swRad[clima.dt$HoY==2950]
Ind_test <- clima.dt$Index[clima.dt$HoY==2950]
x_test <- clima.dt$x[clima.dt$HoY==2950]
y_test <- clima.dt$y[clima.dt$HoY==2950]

sw_test_0_gapfilled_inter[(sw_test_0_gapfilled<(mean(sw_test[sw_test!=0])-4*sd(sw_test[sw_test!=0]))) | (sw_test_0_gapfilled>(mean(sw_test[sw_test!=0])+4*sd(sw_test[sw_test!=0])))]=mean(sw_test[sw_test!=0])
df_test_0_gapfilled <- data.frame(x=x_test,y=y_test,swRad=sw_test_0_gapfilled,sw_inter=sw_test_0_gapfilled_inter)
#df$swRad[df$swRad==0]<-df$swRad[df$swRad==0]*NA

ggplot(df_test_0_gapfilled, aes(x=x,y=y,col=sw_inter))+geom_point()+ggtitle('0 & NA Gapfilled, 2018 HOY=2950')

#ggplot(df, aes(x=x,y=y,col=sw_inter))+geom_point()

clima_inter<-clima.dt

for (i in 4900:8760) {
  sw_test<-clima_test.dt$swRad[clima.dt$HoY==i]
  sw_gf<-clima.dt$swRad[clima.dt$HoY==i]
  sw_gf_inter<-clima.dt$swRad[clima.dt$HoY==i]
  sw_gf_inter[(sw_gf<(mean(sw_test[sw_test!=0])-4*sd(sw_test[sw_test!=0]))) | (sw_gf>(mean(sw_test[sw_test!=0])+4*sd(sw_test[sw_test!=0])))]=mean(sw_test[sw_test!=0])
  print(i)
  clima_inter$swRad[clima.dt$HoY==i]<-sw_gf_inter
}

saveRDS(clima_inter,'C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2018/2018/rap_goes_GTA_500m_2018_hourly_gapfilled_std_mean_filled.rds')




clima.dt = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_test.rds")
clima.dt2 = readRDS("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_gapfilled.rds")

clima.dt2$sw_inter<-clima.dt2$swRad

for (i in 1:8760){
  if (mean(clima.dt2$swRad[clima.dt2$HoY==i],na.rm=TRUE)>0 & length(which(clima.dt2$swRad[clima.dt2$HoY==i]==0))>0){
    clima.dt2$sw_inter[clima.dt2$HoY==i & clima.dt2$swRad==0] <- mean(clima.dt$swRad[clima.dt$HoY==i & clima.dt$swRad!=0],na.rm=TRUE)
    print(i)
  }
}

clima.dt2
clima.dt2$swRad<-clima.dt2$sw_inter
clima.dt2<-clima.dt2[,-8]


saveRDS(clima.dt2,'C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/GTA_500m_2019/2019/rap_goes_GTA_500m_2019_hourly_gapfilled_0_mean_filled.rds')
