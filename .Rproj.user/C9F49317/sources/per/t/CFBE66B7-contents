memory.limit(size=5e8)
library(raster)
library(data.table)
library(gdalUtils)
library(sp)
library(ellipsis)
library(ggplot2)


library("rgdal")
library("shapefiles")

setwd("C:/Users/kitty/Documents/Research/SIF/UrbanVPRM/UrbanVPRM/dataverse_files/")

# import evi data
evi <- read.csv('GTA_2018_SOLRIS_500m_output/GTA_500m/adjusted_evi_lswi_interpolated_modis.csv')

#evi_inter<-evi[,c('x', 'y', 'Index', 'DOY','EVI_inter','LSWI_inter')]
# just select columns with coordinates and index
evi_0 <- evi[,c('x', 'y', 'Index')]

# create raster from data
#evi_inter_r<-rasterFromXYZ(evi_inter)
evi_r <- rasterFromXYZ(evi_0)

# assign crs of raster given crs of landsat data with which it was created
#crs(evi_inter_r) <- '+proj=utm +zone=17 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'
crs(evi_r) <- "+proj=longlat +datum=WGS84 +no_defs"

#plot(evi_inter_r)
# plot values (this looks like a gradient since it is just the pixel indices, but would look like real data if you did something like evi <- evi[,c('x', 'y', 'EVI_inter')] instead)
plot(evi_r)

#rm(evi_inter_r)
rm(evi_r,evi_0)

#My code below

vprm <- read.csv('GTA_500m_2018/vprm_mixed_ISA_500m_GTA_no_PScale_block_00000001.csv')#readRDS('outputs/NIST30/fluxes_NIST30_2018_DBF_block_00005279.rds')

In<-NULL
Inx<-NULL
Iny<-NULL

'%notin%' <- Negate('%in%')

for (i in 1:length(evi$Index)){
  #if (evi$Index[i]<6000 & evi$Index[i]>5500){
  if (length(In)==0){
    In<-evi$Index[i]
    Inx<-evi$x[i]
    Iny<-evi$y[i]
  }else if(evi$Index[i] %notin% In){
    In<-append(In, evi$Index[i])
    Inx<-append(Inx, evi$x[i])
    Iny<-append(Iny, evi$y[i])
  }
}

Index_xy <- data.frame(
  Index = In,
  x = Inx,
  y= Iny,
  stringsAsFactors = FALSE
)

rm(In,Inx,Iny,evi)

x.stk<-NULL
y.stk<-NULL
Date.stk <- NULL
HoY.stk <- NULL
GEE.stk <- NULL
TScale.stk <- NULL
PScale.stk <- NULL
WScale.stk <- NULL
PAR.stk <- NULL
Tair.stk <- NULL
Re.stk <- NULL
Ra.stk <- NULL
Rh.stk <- NULL
EVI_scale.stk <- NULL
Index.stk<-NULL


for (I in 1:length(vprm$Index)){
  if (4820==vprm$HoY[I]){ 
    if (length(x.stk)==0){
      x.stk <- Index_xy$x[vprm$Index[I]] 
      y.stk <- Index_xy$y[vprm$Index[I]]
      Date.stk <- vprm$Date[I]
      HoY.stk <- vprm$HoY[I]
      GEE.stk   <- vprm$GEE[I]
      #TScale.stk <- vprm$TScale[I]
      PScale.stk <- vprm$PScale[I]
      #WScale.stk <- vprm$WScale[I]
      #PAR.stk <- vprm$PAR[I]
      #Tair.stk <- vprm$Tair[I]
      Re.stk <- vprm$Re[I]
      #Ra.stk <- vprm$Ra[I]
      #Rh.stk <- vprm$Rh[I]
      #EVI_scale.stk <- vprm$EVI_scale[I]
      Index.stk<-vprm$Index[I]
    } else {
      x.stk <- append(x.stk, Index_xy$x[vprm$Index[I]])
      y.stk <- append(y.stk, Index_xy$y[vprm$Index[I]])
      Date.stk <- append(Date.stk, vprm$Date[I])
      HoY.stk <- append(HoY.stk, vprm$HoY[I])
      GEE.stk   <- append(GEE.stk,  vprm$GEE[I])
      #TScale.stk <- append(TScale.stk, vprm$TScale[I])
      PScale.stk <- append(PScale.stk, vprm$PScale[I])
      #WScale.stk <- append(WScale.stk, vprm$WScale[I])
      #PAR.stk <- append(PAR.stk, vprm$PAR[I])
      #Tair.stk <- append(Tair.stk, vprm$Tair[I])
      Re.stk <- append(Re.stk, vprm$Re[I])
      #Ra.stk <- append(Ra.stk, vprm$Ra[I])
      #Rh.stk <- append(Rh.stk, vprm$Rh[I])
      EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
      Index.stk <-append(Index.stk,vprm$Index[I])
    }
  }
}

rm(vprm)
vprm <- read.csv('GTA_500m_2018/vprm_mixed_ISA_500m_GTA_no_PScale_block_00002501.csv')#readRDS('outputs/NIST30/fluxes_NIST30_2018_DBF_block_00005279.rds')


for (I in 1:length(vprm$Index)){
  if (4820==vprm$HoY[I]){ #} & vprm$HoY[I] < 4825){ #this makes it so you only get the first day
    if (length(x.stk)==0){
      x.stk <- Index_xy$x[vprm$Index[I]] 
      y.stk <- Index_xy$y[vprm$Index[I]]
      Date.stk <- vprm$Date[I]
      HoY.stk <- vprm$HoY[I]
      GEE.stk   <- vprm$GEE[I]
      #TScale.stk <- vprm$TScale[I]
      PScale.stk <- vprm$PScale[I]
      #WScale.stk <- vprm$WScale[I]
      #PAR.stk <- vprm$PAR[I]
      #Tair.stk <- vprm$Tair[I]
      Re.stk <- vprm$Re[I]
      #Ra.stk <- vprm$Ra[I]
      #Rh.stk <- vprm$Rh[I]
      #EVI_scale.stk <- vprm$EVI_scale[I]
      Index.stk<-vprm$Index[I]
    } else {
      x.stk <- append(x.stk, Index_xy$x[vprm$Index[I]])
      y.stk <- append(y.stk, Index_xy$y[vprm$Index[I]])
      Date.stk <- append(Date.stk, vprm$Date[I])
      HoY.stk <- append(HoY.stk, vprm$HoY[I])
      GEE.stk   <- append(GEE.stk,  vprm$GEE[I])
      #TScale.stk <- append(TScale.stk, vprm$TScale[I])
      PScale.stk <- append(PScale.stk, vprm$PScale[I])
      #WScale.stk <- append(WScale.stk, vprm$WScale[I])
      #PAR.stk <- append(PAR.stk, vprm$PAR[I])
      #Tair.stk <- append(Tair.stk, vprm$Tair[I])
      Re.stk <- append(Re.stk, vprm$Re[I])
      #Ra.stk <- append(Ra.stk, vprm$Ra[I])
      #Rh.stk <- append(Rh.stk, vprm$Rh[I])
      EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
      Index.stk <-append(Index.stk,vprm$Index[I])
    }
  }
}

#rm(vprm)

All.data.MOD <- data.frame(
  Index = Index.stk[-length(x.stk)],
  x = x.stk[-length(x.stk)], 
  y = y.stk[-length(x.stk)],
  GEE = GEE.stk[-length(x.stk)],
  Re =Re.stk[-length(x.stk)],
  #Ra = Ra.stk[-length(x.stk)],
  #Rh = Rh.stk[-length(x.stk)],
  HoY = HoY.stk[-length(x.stk)],
  #T_Scale = TScale.stk[-length(x.stk)],
  P_Scale = PScale.stk[-length(x.stk)],
  #W_Scale = WScale.stk[-length(x.stk)],
  #EVI_Scale =EVI_scale.stk[-length(x.stk)],
  #Tair = Tair.stk[-length((x.stk))],
  #PAR = PAR.stk[-length(x.stk)],
  stringsAsFactors = FALSE
)


sincrs <- '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0'
coords <- SpatialPoints(cbind(All.data.MOD$x, All.data.MOD$y), proj4string=CRS(sincrs))

GEE_xy_data.MOD<-cbind(as.data.frame(coords), All.data.MOD$GEE, All.data.MOD$Re,
                       #All.data.MOD$Ra, All.data.MOD$Rh, All.data.MOD$T_Scale,
                       All.data.MOD$P_Scale) #, All.data.MOD$W_Scale, 
                       #All.data.MOD$EVI_Scale, All.data.MOD$Tair,
                       #All.data.MOD$PAR)

#GTA bound box:
bound_box_0 = readOGR(dsn="C:/Users/kitty/Documents/Research/SIF/Shape_files/Toronto", layer='Toronto_BB') #TPD/shapefiles",layer='TPD_30m_BB_4km') # shapefile data in /urbanVPRM_30m/shapefiles/
bound_box_0 = spTransform(bound_box_0, '+proj=longlat +datum=WGS84 +no_defs')
bb<-fortify(bound_box_0)

#GEEplot<-ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
#                aes(x = coords.x1, y = coords.x2, width=1/240,
#                    height=1/240)) + geom_tile(aes(fill=All.data.MOD$GEE)) + scale_fill_gradient2(name='GPP',limits=c(0,60),low='gray20', mid='forestgreen', high='greenyellow',midpoint=30) + geom_point(data=B,colour = 'red') + coord_equal() + xlab(expression(Longitude ^o)) + ylab(expression(Latitude ^o)) + ggtitle('Borden Instantaneous GPP MODIS (T = 3620 hrs)')
GEEplot<-ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
                aes(x = coords.x1, y = coords.x2, width=1/240,
                    height=1/240)) + geom_tile(aes(fill=All.data.MOD$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),colour="black", 
                                                                                          fill = 'skyblue', alpha = 0) + coord_equal() + ggtitle('GTA Block 1 Instantaneous GPP MODIS (T = 4820 hrs)')

print(GEEplot)

GEE_raster<-rasterFromXYZ(GEE_xy_data.MOD) 
GEE_crop<-mask(GEE_raster,bound_box_0)
plot(GEE_crop$All.data.MOD.GEE, main='GTA GEE at t=4820 hr')
plot(GEE_crop$All.data.MOD.Re, main='GTA Reco at t=4820 hr')
plot(GEE_crop$All.data.MOD.Re+GEE_crop$All.data.MOD.GEE, main='GTA NEE at t=4820 hr')



ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$EVI_Scale)) + ggtitle('Borden Instantaneous EVI Scale MODIS (T = 3620 hrs)') +coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$P_Scale)) + ggtitle('Borden Instantaneous P Scale MODIS (T = 3620 hrs)') +coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$W_Scale)) + ggtitle('Borden Instantaneous W Scale MODIS (T = 3620 hrs)') + coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$Ra)) + ggtitle('Borden Instantaneous Ra MODIS (T = 3620 hrs)') + coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$Rh)) + ggtitle('Borden Instantaneous Rh MODIS (T = 3620 hrs)') + coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$Re)) + ggtitle('Borden Instantaneous Re MODIS (T = 3620 hrs)') + coord_equal()+geom_point(data=B,colour = 'red')

ggplot(GEE_xy_data.MOD,                       # Draw ggplot2 plot
       aes(x = coords.x1, 
           y = coords.x2,
           width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MOD$Re-All.data.MOD$GEE)) + ggtitle('Borden Instantaneous NEE MODIS (T = 3620 hrs)') + coord_equal()+geom_point(data=B,colour = 'red')




vprm <- read.csv('GTA_500m_2018/vprm_mixed_ISA_500m_GTA_no_PScale_block_00000001.csv')#readRDS('outputs/NIST30/fluxes_NIST30_2018_DBF_block_00005279.rds')

#Replace missing values with the value at the average at the same time the day before & after
#HOY_test<-unique(vprm$HoY[is.na(vprm$GEE)])[1:71]
##Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
#for (h in HOY_test){
#  if (h > 24 & h <= 8736){
#    vprm$GEE[vprm$HoY==h]<-(vprm$GEE[vprm$HoY==h+24]+vprm$GEE[vprm$HoY==h-24])/2
#  } else if (h <= 24){
#    vprm$GEE[vprm$HoY==h]<-vprm$GEE[vprm$HoY==h+24]
#  } else{
#    vprm$GEE[vprm$HoY==h]<-vprm$GEE[vprm$HoY==h-24]
#  }
#  print(h)
#}

#If there are still missing values replace with the average of the hour before and after
#HOY_test<-unique(vprm$HoY[is.na(vprm$GEE)])[1:46]
##Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
#for (h in HOY_test){
#  vprm$GEE[vprm$HoY==h]<-(vprm$GEE[vprm$HoY==h+1]+vprm$GEE[vprm$HoY==h-1])/2
#}

HOY_test<-unique(vprm$HoY[is.na(vprm$GEE)])#[1:71]
#Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
for (h in HOY_test){
  Index_na <- vprm$Index[which(vprm$HoY==h & is.na(vprm$GEE))]# & vprm$Index %notin% Index_all_na )]
  GEE_na<-vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]# & vprm$Index %notin% Index_all_na)]
  #for (i in 1:length(Index_na)){
  #  if (sum(is.na(vprm$GEE[vprm$Index == Index_na[i]])) < 8760){
  if (h>24 & h<8736){
    GEE_na<-(vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+24)]+vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-24)])/2
  } else if (h <= 24){
    GEE_na<-vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+24)]
    #GEE_na<-vprm$GEE[vprm$HoY==h+24][is.na(vprm$GEE[vprm$HoY==h])]
  } else{
    GEE_na<-vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-24)]
  }
  #print(i)
  vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]<-GEE_na
  print(h)
}

#If there are still missing values replace with the average of the hour before and after
HOY_test_hr<-unique(vprm$HoY[is.na(vprm$GEE)])#[1:46]
#Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
for (h in HOY_test_hr){
  Index_na <- vprm$Index[which(vprm$HoY==h & is.na(vprm$GEE))]
  GEE_na<-vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]
  if (h > 1 & h< 8760){
    GEE_na<-(vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-1)]+vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+1)])/2
    #vprm$GEE[vprm$HoY==h]<-(vprm$GEE[vprm$HoY==h+1]+vprm$GEE[vprm$HoY==h-1])/2
  }
  vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]<-GEE_na
  print(h)
}

Date_MAM <- vprm$Date[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
HoY_MAM <- vprm$HoY[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
GEE_MAM <- vprm$GEE[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
Re_MAM <- vprm$Re[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
Index_MAM <- vprm$Index[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]

Date_JJA <- vprm$Date[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
HoY_JJA <- vprm$HoY[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
GEE_JJA <- vprm$GEE[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
Re_JJA <- vprm$Re[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
Index_JJA <- vprm$Index[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]

Date_SON <- vprm$Date[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
HoY_SON <- vprm$HoY[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
GEE_SON <- vprm$GEE[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
Re_SON <- vprm$Re[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
Index_SON <- vprm$Index[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]

#Date_SON <- Date_val[HoY_val >= 5832]
#HoY_SON <- HoY_val[HoY_val >= 5832]
#GEE_SON <- GEE_val[HoY_val >= 5832]
#Re_SON <- Re_val[HoY_val >= 5832]
#Index_SON <- Index_val[HoY_val >= 5832]

#rm(Date_SON,Date_SON2,HoY_SON,HoY_SON2,GEE_SON,GEE_SON2,Re_SON,Re_SON2,
#   Index_SON,Index_SON2) #,PAR.stk,PScale.stk,Ra.stk,Rh.stk,Tair.stk,TScale.stk)
#rm(EVI_scale.stk,WScale.stk)
#rm(Date_val,HoY_val,GEE_val,Re_val,Index_val)

Date_DJF <- vprm$Date[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
HoY_DJF <- vprm$HoY[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
GEE_DJF <- vprm$GEE[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Re_DJF <- vprm$Re[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Index_DJF <- vprm$Index[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]

x.stk_MAM<-NULL
y.stk_MAM<-NULL
Date.stk_MAM <- NULL
HoY.stk_MAM <- NULL
GEE.stk_MAM <- NULL
#TScale.stk <- NULL
#PScale.stk <- NULL
#WScale.stk <- NULL
#PAR.stk <- NULL
#Tair.stk <- NULL
Re.stk_MAM <- NULL
#Ra.stk <- NULL
#Rh.stk <- NULL
#EVI_scale.stk <- NULL
Index.stk_MAM<-NULL

for (I in Index_xy$Index[1:2500]){
  if (length(x.stk_MAM)==0){
    x.stk_MAM <- Index_xy$x[I] 
    y.stk_MAM <- Index_xy$y[I]
    GEE.stk_MAM   <- sum(GEE_MAM[Index_MAM==I])
    Re.stk_MAM <- sum(Re_MAM[Index_MAM==I])
    Index.stk_MAM<- I
  } else {
    x.stk_MAM <- append(x.stk_MAM, Index_xy$x[I])
    y.stk_MAM <- append(y.stk_MAM, Index_xy$y[I])
    GEE.stk_MAM   <- append(GEE.stk_MAM,  sum(GEE_MAM[Index_MAM==I]))
    Re.stk_MAM <- append(Re.stk_MAM, sum(Re_MAM[Index_MAM==I]))
    Index.stk_MAM <-append(Index.stk_MAM,I)
  }
  if (I%%100 == 0){print(I)}
}






for (I in Index_xy$Index[1:2500]){
  #x_val<-NULL
  #y_val<-NULL
  #Date_val <- NULL
  #HoY_val <- NULL
  #GEE_val <- NULL
  #TScale_val <- NULL
  #PScale_val <- NULL
  #WScale_val <- NULL
  #PAR_val <- NULL
  #Tair_val <- NULL
  #Re_val <- NULL
  #Ra_val <- NULL
  #Rh_val <- NULL
  #EVI_scale_val <- NULL
  #Index_val<-NULL
  
  #Date_val_0 <- vprm$Date[I]
  #HoY_val_0 <- vprm$HoY[I]
  #GEE_val_0 <- vprm$GEE[vprm$Index==I]
  #Re_val_0 <- vprm$Re[vprm$Index==I]
  
  #for (j in 1:length(vprm$Index[vprm$Index==I])){
  #  if (length(GEE_val)==0){
  #    #x_val <- Index_xy$x[I]
  #    #y_val <- Index_xy$y[I]
  #    #Date_val <- Date_val_0[j]
  #    #HoY_val_0 <- HoY_val_0[j]
  #    GEE_val <- GEE_val_0[j]
  #    #TScale_val <- vprm$TScale[I]
  #    #PScale_val <- vprm$PScale[I]
  #    #WScale_val <- vprm$WScale[I]
  #    #PAR_val <- vprm$PAR[I]
  #    #Tair_val <- vprm$Tair[I]
  #    Re_val <- Re_val_0[j]
  #    
  #    #Ra_val <- vprm$Ra[I]
  #    #Rh_val <- vprm$Rh[I]
  #    #EVI_scale_val <- vprm$EVI_scale[I]
  #    #Index_val<-vprm$Index[I]
  #  } else {
  #    #x.stk <- append(x.stk, Index_xy$x[vprm$Index[I]])
  #    #y.stk <- append(y.stk, Index_xy$y[vprm$Index[I]])
  #    #Date_val <- append(Date_val, Date_val_0[j])
  #    #HoY_val <- append(HoY_val, HoY_val_0[j])
  #    GEE_val   <- append(GEE_val, GEE_val_0[j])
  #    #TScale.stk <- append(TScale.stk, vprm$TScale[I])
  #    #PScale.stk <- append(PScale.stk, vprm$PScale[I])
  #    #WScale.stk <- append(WScale.stk, vprm$WScale[I])
  #    #PAR.stk <- append(PAR.stk, vprm$PAR[I])
  #    #Tair.stk <- append(Tair.stk, vprm$Tair[I])
  #    Re_val <- append(Re_val, Re_val_0[j])
  #    #Ra.stk <- append(Ra.stk, vprm$Ra[I])
  #    #Rh.stk <- append(Rh.stk, vprm$Rh[I])
  #    #EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
  #    #Index.stk <-append(Index.stk,vprm$Index[I])
  #  }
  #}
  if (length(x.stk)==0){
    x.stk <- Index_xy$x[I] 
    y.stk <- Index_xy$y[I]
    #Date.stk <- mean(Date_val,na.rm=TRUE)
    #HoY.stk <- vprm$HoY[I]
    GEE.stk   <- sum(vprm$GEE[vprm$Index==I])
    #TScale.stk <- vprm$TScale[I]
    #PScale.stk <- vprm$PScale[I]
    #WScale.stk <- vprm$WScale[I]
    #PAR.stk <- vprm$PAR[I]
    #Tair.stk <- vprm$Tair[I]
    Re.stk <- sum(vprm$Re[vprm$Index==I])
    #Ra.stk <- vprm$Ra[I]
    #Rh.stk <- vprm$Rh[I]
    #EVI_scale.stk <- vprm$EVI_scale[I]
    Index.stk<- I
  } else {
    x.stk <- append(x.stk, Index_xy$x[I])
    y.stk <- append(y.stk, Index_xy$y[I])
    #Date.stk <- append(Date.stk, vprm$Date[I])
    #HoY.stk <- append(HoY.stk, vprm$HoY[I])
    GEE.stk   <- append(GEE.stk,  sum(vprm$GEE[vprm$Index==I]))
    #TScale.stk <- append(TScale.stk, vprm$TScale[I])
    #PScale.stk <- append(PScale.stk, vprm$PScale[I])
    #WScale.stk <- append(WScale.stk, vprm$WScale[I])
    #PAR.stk <- append(PAR.stk, vprm$PAR[I])
    #Tair.stk <- append(Tair.stk, vprm$Tair[I])
    Re.stk <- append(Re.stk, sum(vprm$Re[vprm$Index==I]))
    #Ra.stk <- append(Ra.stk, vprm$Ra[I])
    #Rh.stk <- append(Rh.stk, vprm$Rh[I])
    #EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
    Index.stk <-append(Index.stk,I)
  }
  if (I%%100 == 0){print(I)}
}

rm(vprm)

vprm <- read.csv('GTA_500m_2018/vprm_mixed_ISA_500m_GTA_no_PScale_block_00010001.csv')#readRDS('outputs/NIST30/fluxes_NIST30_2018_DBF_block_00005279.rds')

#Index_all_na<-NULL
#for (i in unique(vprm$Index)){
#  if (sum(is.na(vprm$GEE[vprm$Index==i]))==8760){
#    if (length(Index_all_na)==0){
#      Index_all_na <- i
#    }else{
#      Index_all_na <- append(Index_all_na, i)
#    }
#    print(i)
#  }
#}

#Replace missing values with the value at the average at the same time the day before & after
#HOY_test<- HOY_7127[is.na(GEE_7127)]
#HOY_test <- unique(vprm$HoY[is.na(vprm$GEE)])#[1:68]
#Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
for (h in HOY_test){
  #h<- 399 #8319 #7310 1382 399
  Index_na <- vprm$Index[which(vprm$HoY==h & is.na(vprm$GEE))]# & vprm$Index %notin% Index_all_na )]
  GEE_na<-vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]# & vprm$Index %notin% Index_all_na)]
  #for (i in 1:length(Index_na)){
  #  if (sum(is.na(vprm$GEE[vprm$Index == Index_na[i]])) < 8760){
  if (h>24 & h<8736){
    GEE_na<-(vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+24)]+vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-24)])/2
  } else if (h <= 24){
    GEE_na<-vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+24)]
    #GEE_na<-vprm$GEE[vprm$HoY==h+24][is.na(vprm$GEE[vprm$HoY==h])]
  } else{
    GEE_na<-vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-24)]
  }
  #print(i)
  vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]<-GEE_na# & vprm$Index %notin% Index_all_na)]<-GEE_na
  print(h)
}

#GEE_7127<-vprm$GEE[which(vprm$Index==10120)]
#HOY_7127<-vprm$HoY[which(vprm$Index==10120)]

#All.data.7127 <- data.frame(x = HOY_7127[100:200], y = GEE_7127[100:200], stringsAsFactors = FALSE)
#plot(All.data.7127)#,type='l')

#If there are still missing values replace with the average of the hour before and after
#HOY_test<-HOY_7127[is.na(GEE_7127)] 
#HOY_test_hr <- unique(vprm$HoY[is.na(vprm$GEE)])#[1:43]#38]#43]
#Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
for (h in HOY_test_hr){
  #h<-8319 #8319 #8295 #423 #399
  Index_na <- vprm$Index[which(vprm$HoY==h & is.na(vprm$GEE))]# & vprm$Index %notin% Index_all_na )]
  GEE_na<-vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))] # & vprm$Index %notin% Index_all_na)]
  if (h > 1 & h< 8760){
    GEE_na<-(vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h-1)]+vprm$GEE[which(vprm$Index %in% Index_na & vprm$HoY==h+1)])/2
    #vprm$GEE[vprm$HoY==h]<-(vprm$GEE[vprm$HoY==h+1]+vprm$GEE[vprm$HoY==h-1])/2
  }
  vprm$GEE[which(vprm$HoY==h & is.na(vprm$GEE))]<- GEE_na # & vprm$Index %notin% Index_all_na)]<-GEE_na
  print(h)
}

Date_MAM5 <- vprm$Date[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
HoY_MAM5 <- vprm$HoY[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
GEE_MAM5 <- vprm$GEE[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
Re_MAM5 <- vprm$Re[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]
Index_MAM5 <- vprm$Index[which(vprm$HoY < 3624 & vprm$HoY>= 1416)]

Date_JJA5 <- vprm$Date[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
HoY_JJA5 <- vprm$HoY[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
GEE_JJA5 <- vprm$GEE[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
Re_JJA5 <- vprm$Re[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]
Index_JJA5 <- vprm$Index[which(vprm$HoY >= 3624 & vprm$HoY < 5832)]

Date_SON5 <- vprm$Date[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
HoY_SON5 <- vprm$HoY[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
GEE_SON5 <- vprm$GEE[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
Re_SON5 <- vprm$Re[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]
Index_SON5 <- vprm$Index[which(vprm$HoY < 8016 & vprm$HoY >= 5832)]

#Date_SON <- Date_val[HoY_val >= 5832]
#HoY_SON <- HoY_val[HoY_val >= 5832]
#GEE_SON <- GEE_val[HoY_val >= 5832]
#Re_SON <- Re_val[HoY_val >= 5832]
#Index_SON <- Index_val[HoY_val >= 5832]

#rm(Date_SON,Date_SON2,HoY_SON,HoY_SON2,GEE_SON,GEE_SON2,Re_SON,Re_SON2,
#   Index_SON,Index_SON2) #,PAR.stk,PScale.stk,Ra.stk,Rh.stk,Tair.stk,TScale.stk)
#rm(EVI_scale.stk,WScale.stk)
#rm(Date_val,HoY_val,GEE_val,Re_val,Index_val)

Date_DJF5 <- vprm$Date[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
HoY_DJF5 <- vprm$HoY[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
GEE_DJF5 <- vprm$GEE[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Re_DJF5 <- vprm$Re[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Index_DJF5 <- vprm$Index[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]


Index.stk2<-NULL
x.stk2<-NULL
y.stk2<-NULL
GEE.stk2<-NULL
Re.stk2<-NULL

for (I in Index_xy$Index[10001:12500]){
  if (length(x.stk2)==0){
    x.stk2 <- Index_xy$x[I] 
    y.stk2 <- Index_xy$y[I]
    GEE.stk2   <- sum(GEE_MAM5[Index_MAM5==I])
    Re.stk2 <- sum(Re_MAM5[Index_MAM5==I])
    Index.stk2<- I
  } else {
    x.stk2 <- append(x.stk2, Index_xy$x[I])
    y.stk2 <- append(y.stk2, Index_xy$y[I])
    GEE.stk2 <- append(GEE.stk2,  sum(GEE_MAM5[Index_MAM5==I]))
    Re.stk2 <- append(Re.stk2, sum(Re_MAM5[Index_MAM5==I]))
    Index.stk2 <-append(Index.stk2,I)
  }
  if (I%%100 == 0){print(I)}
}

All.data.MAM<- data.frame(
  Index = Index.stk2 [-length(x.stk2)],
  x = x.stk2[-length(x.stk2)], 
  y = y.stk2[-length(x.stk2)],
  GEE = GEE.stk2[-length(x.stk2)],
  Re =Re.stk2[-length(x.stk2)],
  stringsAsFactors = FALSE
)

coords <- SpatialPoints(cbind(All.data.MAM$x, All.data.MAM$y), proj4string=CRS(sincrs))

GEE_xy_data.MAM<-cbind(as.data.frame(coords), All.data.MAM$GEE, All.data.MAM$Re)

ggplot(GEE_xy_data.MAM,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MAM$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),
                                                                                 colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA MAM 2018 sum of GEE using MODIS')

for (I in Index_xy$Index[10001:12500]){
  if (length(x.stk_MAM)==0){
    x.stk_MAM <- Index_xy$x[I] 
    y.stk_MAM <- Index_xy$y[I]
    GEE.stk_MAM <- sum(GEE_MAM5[Index_MAM5==I])
    Re.stk_MAM <- sum(Re_MAM5[Index_MAM5==I])
    Index.stk_MAM<- I
  } else {
    x.stk_MAM <- append(x.stk_MAM, Index_xy$x[I])
    y.stk_MAM <- append(y.stk_MAM, Index_xy$y[I])
    GEE.stk_MAM <- append(GEE.stk_MAM,  sum(GEE_MAM5[Index_MAM5==I]))
    Re.stk_MAM <- append(Re.stk_MAM, sum(Re_MAM5[Index_MAM5==I]))
    Index.stk_MAM <-append(Index.stk_MAM,I)
  }
  if (I%%100 == 0){print(I)}
}


All.data.MAM<- data.frame(
  Index = Index.stk_MAM [-length(x.stk_MAM)],
  x = x.stk_MAM[-length(x.stk_MAM)], 
  y = y.stk_MAM[-length(x.stk_MAM)],
  GEE = GEE.stk_MAM[-length(x.stk_MAM)],
  Re =Re.stk_MAM[-length(x.stk_MAM)],
  stringsAsFactors = FALSE
)

#coords <- SpatialPoints(cbind(All.data.MAM$x, All.data.MAM$y), proj4string=CRS(sincrs))

#GEE_xy_data.MAM<-cbind(as.data.frame(coords), All.data.MAM$GEE, All.data.MAM$Re)

#ggplot(GEE_xy_data.MAM,                       # Draw ggplot2 plot
#       aes(x = coords.x1, y = coords.x2, width=1/240,
#           height=1/240)) + geom_tile(aes(fill=All.data.MAM$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),
#                                                                                  colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA MAM 2018 sum of GEE using MODIS')
#
bound_box_0 = readOGR(dsn="C:/Users/kitty/Documents/Research/SIF/Shape_files/Toronto", layer='Toronto_BB') #TPD/shapefiles",layer='TPD_30m_BB_4km') # shapefile data in /urbanVPRM_30m/shapefiles/
bound_box_0 = spTransform(bound_box_0, '+proj=longlat +datum=WGS84 +no_defs')
bb<-fortify(bound_box_0)

sincrs <- '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0'
coords <- SpatialPoints(cbind(All.data.MAM$x, All.data.MAM$y), proj4string=CRS(sincrs))

GEE_xy_data.MAM<-cbind(as.data.frame(coords), All.data.MAM$GEE, All.data.MAM$Re)

ggplot(GEE_xy_data.MAM,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MAM$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),
                                                                                  colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA MAM 2018 sum of GEE using MODIS')
#All.data.MAM$Re[is.na(All.data.MAM$Re)]<-0 #replace na values over water with 0

ggplot(GEE_xy_data.MAM,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.MAM$Re)) + geom_polygon(data=bb, aes(long, lat, group = group),
                                                                                 colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA MAM 2018 sum of Reco using MODIS')
#Now crop it
GEE_raster<-rasterFromXYZ(GEE_xy_data.MAM) 
GEE_crop<-mask(GEE_raster,bound_box_0)
par(mfrow = c(1,2))
plot(-GEE_crop$All.data.MAM.GEE*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM MAM 2018 GPP tCO2 per grid cell')
plot(GEE_crop$All.data.MAM.Re*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM MAM 2018 Reco tCO2 per grid cell')

GEE_sum<-sum(values(GEE_crop$All.data.MAM.GEE*3600*2.5*10^5*4.4009*10^(-17)),na.rm = TRUE)
Re_sum<-sum(values(GEE_crop$All.data.MAM.Re*3600*2.5*10^5*4.4009*10^(-17)),na.rm=TRUE)
NEE_sum<-GEE_sum+Re_sum

print(paste0('MAM 2018 total sequestration = ',round(-GEE_sum, digits=5),' Mt CO2'))
print(paste0('MAM 2018 total respiration = ',round(Re_sum,digits=5),' Mt CO2'))
print(paste0('MAM 2018 net sequestration = ',round(-NEE_sum,digits=5),' Mt CO2'))


par(mfrow = c(1,1))
plot((GEE_crop$All.data.MAM.Re+GEE_crop$All.data.MAM.GEE)*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM MAM 2018 NEE tCO2 per grid cell')







for (I in Index_xy$Index[10001:12500]){#max(Index_xy$Index)]){ #[12501:13824]
  if (length(x.stk)==0){
    x.stk <- Index_xy$x[I] 
    y.stk <- Index_xy$y[I]
    #Date.stk <- mean(Date_val,na.rm=TRUE)
    #HoY.stk <- vprm$HoY[I]
    GEE.stk   <- sum(vprm$GEE[vprm$Index==I])
    #TScale.stk <- vprm$TScale[I]
    #PScale.stk <- vprm$PScale[I]
    #WScale.stk <- vprm$WScale[I]
    #PAR.stk <- vprm$PAR[I]
    #Tair.stk <- vprm$Tair[I]
    Re.stk <- sum(vprm$Re[vprm$Index==I])
    #Ra.stk <- vprm$Ra[I]
    #Rh.stk <- vprm$Rh[I]
    #EVI_scale.stk <- vprm$EVI_scale[I]
    Index.stk<- I
  } else {
    x.stk <- append(x.stk, Index_xy$x[I])
    y.stk <- append(y.stk, Index_xy$y[I])
    #Date.stk <- append(Date.stk, vprm$Date[I])
    #HoY.stk <- append(HoY.stk, vprm$HoY[I])
    GEE.stk   <- append(GEE.stk,  sum(vprm$GEE[vprm$Index==I]))
    #TScale.stk <- append(TScale.stk, vprm$TScale[I])
    #PScale.stk <- append(PScale.stk, vprm$PScale[I])
    #WScale.stk <- append(WScale.stk, vprm$WScale[I])
    #PAR.stk <- append(PAR.stk, vprm$PAR[I])
    #Tair.stk <- append(Tair.stk, vprm$Tair[I])
    Re.stk <- append(Re.stk, sum(vprm$Re[vprm$Index==I]))
    #Ra.stk <- append(Ra.stk, vprm$Ra[I])
    #Rh.stk <- append(Rh.stk, vprm$Rh[I])
    #EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
    Index.stk <-append(Index.stk,I)
  }
  if (I%%100 == 0){print(I)}
}

All.data.year <- data.frame(
  Index = Index.stk[-length(x.stk)],
  x = x.stk[-length(x.stk)], 
  y = y.stk[-length(x.stk)],
  GEE = GEE.stk[-length(x.stk)],
  Re =Re.stk[-length(x.stk)],
  #Ra = Ra.stk[-length(x.stk)],
  #Rh = Rh.stk[-length(x.stk)],
  #HoY = HoY.stk[-length(x.stk)],
  #T_Scale = TScale.stk[-length(x.stk)],
  #P_Scale = PScale.stk[-length(x.stk)],
  #W_Scale = WScale.stk[-length(x.stk)],
  #EVI_Scale =EVI_scale.stk[-length(x.stk)],
  #Tair = Tair.stk[-length((x.stk))],
  #PAR = PAR.stk[-length(x.stk)],
  stringsAsFactors = FALSE
)

bound_box_0 = readOGR(dsn="C:/Users/kitty/Documents/Research/SIF/Shape_files/Toronto", layer='Toronto_BB') #TPD/shapefiles",layer='TPD_30m_BB_4km') # shapefile data in /urbanVPRM_30m/shapefiles/
bound_box_0 = spTransform(bound_box_0, '+proj=longlat +datum=WGS84 +no_defs')
bb<-fortify(bound_box_0)

sincrs <- '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0'
coords <- SpatialPoints(cbind(All.data.year$x, All.data.year$y), proj4string=CRS(sincrs))

GEE_xy_data.year<-cbind(as.data.frame(coords), All.data.year$GEE, All.data.year$Re)

ggplot(GEE_xy_data.year,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.year$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),
                                                                                  colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA 2018 sum of GEE using MODIS')
#All.data.year$Re[is.na(All.data.year$Re)]<-0 #replace na values over water with 0

ggplot(GEE_xy_data.year,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.year$Re)) + geom_polygon(data=bb, aes(long, lat, group = group),
                                                                                  colour="black", alpha = 0) + coord_equal() + ggtitle('UrbanVPRM GTA 2018 sum of Reco using MODIS')
#Now crop it
GEE_raster<-rasterFromXYZ(GEE_xy_data.year) 
GEE_crop<-mask(GEE_raster,bound_box_0)
par(mfrow = c(1,2))
plot(-GEE_crop$All.data.year.GEE*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 GPP tCO2 per grid cell')
plot(GEE_crop$All.data.year.Re*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 Reco tCO2 per grid cell')

GEE_sum<-sum(values(GEE_crop$All.data.year.GEE*3600*2.5*10^5*4.4009*10^(-17)),na.rm = TRUE)
Re_sum<-sum(values(GEE_crop$All.data.year.Re*3600*2.5*10^5*4.4009*10^(-17)),na.rm=TRUE)
NEE_sum<-GEE_sum+Re_sum

print(paste0('2018 total sequestration = ',round(-GEE_sum, digits=5),' Mt CO2'))
print(paste0('2018 total respiration = ',round(Re_sum,digits=5),' Mt CO2'))
print(paste0('2018 net sequestration = ',round(-NEE_sum,digits=5),' Mt CO2'))


par(mfrow = c(1,1))
plot((GEE_crop$All.data.year.Re+GEE_crop$All.data.year.GEE)*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 NEE tCO2 per grid cell')






Date_val <- vprm$Date[vprm$HoY < 3624]
HoY_val <- vprm$HoY[vprm$HoY < 3624]
GEE_val <- vprm$GEE[vprm$HoY < 3624]
Re_val <- vprm$Re[vprm$HoY < 3624]
Index_val <- vprm$Index[vprm$HoY < 3624]

Date_MAM5 <- Date_val[HoY_val >= 1416]
HoY_MAM5 <- HoY_val[HoY_val >= 1416]
GEE_MAM5 <- GEE_val[HoY_val >= 1416]
Re_MAM5 <- Re_val[HoY_val >= 1416]
Index_MAM5 <- Index_val[HoY_val >= 1416]

Date_val <- vprm$Date[vprm$HoY >= 3624]
HoY_val <- vprm$HoY[vprm$HoY >= 3624]
GEE_val <- vprm$GEE[vprm$HoY >= 3624]
Re_val <- vprm$Re[vprm$HoY >= 3624]
Index_val <- vprm$Index[vprm$HoY >= 3624]

Date_JJA5 <- Date_val[HoY_val < 5832]
HoY_JJA5 <- HoY_val[HoY_val < 5832]
GEE_JJA5 <- GEE_val[HoY_val < 5832]
Re_JJA5 <- Re_val[HoY_val < 5832]
Index_JJA5 <- Index_val[HoY_val < 5832]

Date_val <- vprm$Date[vprm$HoY < 8016]
HoY_val <- vprm$HoY[vprm$HoY < 8016]
GEE_val <- vprm$GEE[vprm$HoY < 8016]
Re_val <- vprm$Re[vprm$HoY < 8016]
Index_val <- vprm$Index[vprm$HoY < 8016]

Date_SON5 <- Date_val[HoY_val >= 5832]
HoY_SON5 <- HoY_val[HoY_val >= 5832]
GEE_SON5 <- GEE_val[HoY_val >= 5832]
Re_SON5 <- Re_val[HoY_val >= 5832]
Index_SON5 <- Index_val[HoY_val >= 5832]

rm(Date_val,HoY_val,GEE_val,Re_val,Index_val)

Date_DJF5 <- vprm$Date[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
HoY_DJF5 <- vprm$HoY[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
GEE_DJF5 <- vprm$GEE[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Re_DJF5 <- vprm$Re[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]
Index_DJF5 <- vprm$Index[which(vprm$HoY >= 8016 | vprm$HoY < 1416 )]

#Index_test<-unique(Index_MAM[is.na(GEE_MAM)])
#  #unique(table(Index_MAM[is.na(GEE_MAM)])<2)#[1:38]
##Re_HOY_test<-unique(vprm$HoY[is.na(vprm$Re)])[1:71]
#for (i in Index_test){
#  if (table(Index_MAM[is.na(GEE_MAM)])[paste0(I)])
#  GEE_MAM[Index_MAM==i]<-(vprm$GEE[vprm$HoY==h+1]+vprm$GEE[vprm$HoY==h-1])/2
#}

#x_val<-NULL
#y_val<-NULL
#Date_val <- NULL
#HoY_val <- NULL
#GEE_val <- NULL
#TScale_val <- NULL
#PScale_val <- NULL
#WScale_val <- NULL
#PAR_val <- NULL
#Tair_val <- NULL
#Re_val <- NULL
#Ra_val <- NULL
#Rh_val <- NULL
#EVI_scale_val <- NULL
#Index_val<-NULL


#Date_val_0 <- vprm$Date[I]
#HoY_val_0 <- vprm$HoY[I]
#GEE_val_0 <- vprm$GEE[vprm$Index==I]
#Re_val_0 <- vprm$Re[vprm$Index==I]

#for (j in 1:length(vprm$Index[vprm$Index==I])){
#  if (length(GEE_val)==0){
#    #x_val <- Index_xy$x[I]
#    #y_val <- Index_xy$y[I]
#    #Date_val <- Date_val_0[j]
#    #HoY_val_0 <- HoY_val_0[j]
#    GEE_val <- GEE_val_0[j]
#    #TScale_val <- vprm$TScale[I]
#    #PScale_val <- vprm$PScale[I]
#    #WScale_val <- vprm$WScale[I]
#    #PAR_val <- vprm$PAR[I]
#    #Tair_val <- vprm$Tair[I]
#    Re_val <- Re_val_0[j]
#    
#    #Ra_val <- vprm$Ra[I]
#    #Rh_val <- vprm$Rh[I]
#    #EVI_scale_val <- vprm$EVI_scale[I]
#    #Index_val<-vprm$Index[I]
#  } else {
#    #x.stk <- append(x.stk, Index_xy$x[vprm$Index[I]])
#    #y.stk <- append(y.stk, Index_xy$y[vprm$Index[I]])
#    #Date_val <- append(Date_val, Date_val_0[j])
#    #HoY_val <- append(HoY_val, HoY_val_0[j])
#    GEE_val   <- append(GEE_val, GEE_val_0[j])
#    #TScale.stk <- append(TScale.stk, vprm$TScale[I])
#    #PScale.stk <- append(PScale.stk, vprm$PScale[I])
#    #WScale.stk <- append(WScale.stk, vprm$WScale[I])
#    #PAR.stk <- append(PAR.stk, vprm$PAR[I])
#    #Tair.stk <- append(Tair.stk, vprm$Tair[I])
#    Re_val <- append(Re_val, Re_val_0[j])
#    #Ra.stk <- append(Ra.stk, vprm$Ra[I])
#    #Rh.stk <- append(Rh.stk, vprm$Rh[I])
#    #EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
#    #Index.stk <-append(Index.stk,vprm$Index[I])
#  }
#}

x.stk2<-NULL
Index.stk2<-NULL
y.stk2<-NULL
GEE.stk2<-NULL
Re.stk2<-NULL

for (I in Index_xy$Index[1:12500]){#length(Index_xy$Index)]){
  if (length(x.stk2)==0){
    x.stk2 <- Index_xy$x[I] 
    y.stk2 <- Index_xy$y[I]
    #Date.stk <- mean(Date_val,na.rm=TRUE)
    #HoY.stk <- vprm$HoY[I]
    GEE.stk2   <- sum(GEE_DJF5[Index_DJF5==I])
    #TScale.stk <- vprm$TScale[I]
    #PScale.stk <- vprm$PScale[I]
    #WScale.stk <- vprm$WScale[I]
    #PAR.stk <- vprm$PAR[I]
    #Tair.stk <- vprm$Tair[I]
    Re.stk2 <- sum(Re_DJF5[Index_DJF5==I])
    #Ra.stk <- vprm$Ra[I]
    #Rh.stk <- vprm$Rh[I]
    #EVI_scale.stk <- vprm$EVI_scale[I]
    Index.stk2<- I
  } else {
    x.stk2 <- append(x.stk2, Index_xy$x[I])
    y.stk2 <- append(y.stk2, Index_xy$y[I])
    #Date.stk <- append(Date.stk, vprm$Date[I])
    #HoY.stk <- append(HoY.stk, vprm$HoY[I])
    GEE.stk2   <- append(GEE.stk2,  sum(GEE_DJF5[Index_DJF5==I]))
    #TScale.stk <- append(TScale.stk, vprm$TScale[I])
    #PScale.stk <- append(PScale.stk, vprm$PScale[I])
    #WScale.stk <- append(WScale.stk, vprm$WScale[I])
    #PAR.stk <- append(PAR.stk, vprm$PAR[I])
    #Tair.stk <- append(Tair.stk, vprm$Tair[I])
    Re.stk2 <- append(Re.stk2, sum(Re_DJF5[Index_DJF5==I]))
    #Ra.stk <- append(Ra.stk, vprm$Ra[I])
    #Rh.stk <- append(Rh.stk, vprm$Rh[I])
    #EVI_scale.stk <- append(EVI_scale.stk, vprm$EVI_scale[I])
    Index.stk2 <-append(Index.stk2,I)
  }
  if (I%%100 == 0){print(I)}
}


All.data.DJF <- data.frame(
  Index = Index.stk2[-length(x.stk2)],
  x = x.stk2[-length(x.stk2)], 
  y = y.stk2[-length(x.stk2)],
  GEE = GEE.stk2[-length(x.stk2)],
  Re =Re.stk2[-length(x.stk2)],
  #Ra = Ra.stk[-length(x.stk)],
  #Rh = Rh.stk[-length(x.stk)],
  #HoY = HoY.stk[-length(x.stk)],
  #T_Scale = TScale.stk[-length(x.stk)],
  #P_Scale = PScale.stk[-length(x.stk)],
  #W_Scale = WScale.stk[-length(x.stk)],
  #EVI_Scale =EVI_scale.stk[-length(x.stk)],
  #Tair = Tair.stk[-length((x.stk))],
  #PAR = PAR.stk[-length(x.stk)],
  stringsAsFactors = FALSE
)

All.data.year<-All.data.DJF#+All.data.JJA+All.data.MAM+All.data.SON

sincrs <- '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0'
coords <- SpatialPoints(cbind(All.data.DJF$x, All.data.DJF$y), proj4string=CRS(sincrs))

GEE_xy_data.year<-cbind(as.data.frame(coords), All.data.year$GEE, All.data.year$Re)

ggplot(GEE_xy_data.year,                       # Draw ggplot2 plot
        aes(x = coords.x1, y = coords.x2, width=1/240,
            height=1/240)) + geom_tile(aes(fill=All.data.year$GEE)) + geom_polygon(data=bb, aes(long, lat, group = group),colour="black", 
                                                                                          fill = 'skyblue', alpha = 0) + coord_equal() + ggtitle('UrbanVPRM Toronto DJF GPP sum using MODIS')
ggplot(GEE_xy_data.year,                       # Draw ggplot2 plot
       aes(x = coords.x1, y = coords.x2, width=1/240,
           height=1/240)) + geom_tile(aes(fill=All.data.year$Re)) + geom_polygon(data=bb, aes(long, lat, group = group),colour="black", 
                                                                                 fill = 'skyblue', alpha = 0) + coord_equal() + ggtitle('UrbanVPRM Toronto 2018 Reco sum using MODIS')

#Now crop it
GEE_raster<-rasterFromXYZ(GEE_xy_data.year) 
GEE_crop<-mask(GEE_raster,bound_box_0)
par(mfrow = c(1,2))
plot(-GEE_crop$All.data.year.GEE*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 GPP tCO2 per grid cell')
plot(GEE_crop$All.data.year.Re*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 Reco tCO2 per grid cell')

GEE_sum_2018<-sum(values(GEE_crop$All.data.year.GEE*3600*2.5*10^5*4.4009*10^(-17)),na.rm = TRUE)
Re_sum_2018<-sum(values(GEE_crop$All.data.year.Re*3600*2.5*10^5*4.4009*10^(-17)),na.rm=TRUE)
GEE_sum_2018<-GEE_sum_DJF+GEE_sum_JJA+GEE_sum_MAM+GEE_sum_SON
Re_sum_2018<-Re_sum_DJF+Re_sum_JJA+Re_sum_MAM+Re_sum_SON
NEE_sum_2018<-GEE_sum_2018+Re_sum_2018
print(paste0('2018 total sequestration = ',round(-GEE_sum_2018, digits=5),' Mt CO2'))
print(paste0('2018 total respiration = ',round(Re_sum_2018,digits=5),' Mt CO2'))
print(paste0('2018 net sequestration = ',round(-NEE_sum_2018,digits=5),' Mt CO2'))

par(mfrow = c(1,1))
plot((GEE_crop$All.data.year.Re+GEE_crop$All.data.year.GEE)*3600*2.5*10^5*4.4009*10^(-17)*10**6, main='UrbanVPRM 2018 NEE tCO2 per grid cell')



GEE_8127<-vprm$GEE[which(vprm$Index==8127 & vprm$HoY>8000)]
HOY_8127<-vprm$HoY[which(vprm$Index==8127 & vprm$HoY>8000)]

All.data.8127 <- data.frame(x = HOY_8127, y = GEE_8127, stringsAsFactors = FALSE)
plot(All.data.8127, type='l')

#rm(vprm)


